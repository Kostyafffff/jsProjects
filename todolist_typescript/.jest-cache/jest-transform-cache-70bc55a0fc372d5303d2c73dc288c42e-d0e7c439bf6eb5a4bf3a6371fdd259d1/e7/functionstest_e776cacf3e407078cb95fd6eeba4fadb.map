{"file":"C:\\Users\\user\\WebstormProjects\\jsProjects\\todolist_typescript\\test\\functions.test.tsx","mappings":";;;AAAA,+BAA0B;AAC1B,+BAA0B;AAC1B,iCAA+B;AAC/B,8CAAuC;AACvC,kFAA+E;AAG/E,QAAQ,CAAC,YAAY,EAAE;IACnB,EAAE,CAAC,MAAM,EAAE;QACP,OAAO;QACP,IAAM,CAAC,GAAG,CAAC,CAAC;QACZ,IAAM,CAAC,GAAG,CAAC,CAAC;QACZ,IAAM,QAAQ,GAAG,CAAC,CAAC;QACnB,MAAM;QACN,IAAM,MAAM,GAAG,gBAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE1B,MAAM;QACN,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE;QACzB,OAAO;QACP,IAAM,KAAK,GAAsB;YAC7B,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,IAAI;YACf,KAAK,EAAE,OAAO;YACd,SAAS,EAAE,eAAK,CAAC,IAAI,EAAE;YACvB,YAAY,EAAE,eAAK,CAAC,IAAI,EAAE;YAC1B,iBAAiB,EAAE,eAAK,CAAC,IAAI,EAAE;SAClC,CAAC;QAEF,MAAM;QACN,IAAM,OAAO,GAAG,cAAK,CAAC,8BAAC,6BAAY,uBAAK,KAAK,EAAI,CAAC,CAAC;QAEnD,MAAM;QACN,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAChD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\user\\WebstormProjects\\jsProjects\\todolist_typescript\\test\\functions.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport sinon from 'sinon';\r\nimport { mount } from 'enzyme';\r\nimport { mult } from '../src/functions'\r\nimport { TodoListItem } from '../src/components/todo-list-item/todo-list-item';\r\nimport { TodoListItemProps } from '../src/components/todo-list-item/types-todo-list-item';\r\n\r\ndescribe('mult works', () => {\r\n    it('name', () => {\r\n        //Given\r\n        const a = 2;\r\n        const b = 3;\r\n        const expected = 6;\r\n        //When\r\n        const actual = mult(a, b);\r\n\r\n        //Then\r\n        expect(actual).toEqual(expected);\r\n    });\r\n\r\n    it('should mount component', () => {\r\n        //Given\r\n        const props: TodoListItemProps = {\r\n            done: true,\r\n            important: true,\r\n            label: 'Label',\r\n            onDeleted: sinon.stub(),\r\n            onToggleDone: sinon.stub(),\r\n            onToggleImportant: sinon.stub(),\r\n        };\r\n\r\n        //When\r\n        const wrapper = mount(<TodoListItem {...props} />);\r\n\r\n        //Then\r\n        expect(wrapper.isEmptyRender()).toBeFalsy();\r\n    });\r\n});"],"version":3}