{"file":"C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\app-test\\app.test.tsx","mappings":"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","names":[],"sources":["C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\app-test\\app.test.tsx"],"sourcesContent":["import { mount } from 'enzyme';\r\nimport * as React from 'react';\r\nimport sinon from 'sinon';\r\nimport { App } from \"../../../src/components/app/App\";\r\n\r\nconst state = {\r\n  toDoData: [\r\n      sinon.stub(),\r\n      sinon.stub(),\r\n      sinon.stub(),\r\n      'asd',\r\n      'active'\r\n  ]\r\n};\r\n\r\ndescribe('src/components/App/App', () => {\r\n\r\n    beforeEach(() => {\r\n        sinon.resetHistory();\r\n    });\r\n\r\n    it('App component should be rendered', () => {\r\n\r\n        const wrapper = mount(<App {...state}/>);\r\n\r\n        expect(wrapper.isEmptyRender()).toBeFalsy();\r\n    });\r\n\r\n    //createToDoItem\r\n    it('createTodoItem check', () =>{\r\n        //Given\r\n        const label = 'asdasdas';\r\n        const instance = mount<App>(<App />).instance();\r\n        const expected = {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: instance.maxId,\r\n        };\r\n\r\n        //When\r\n        const actual = instance.createTodoItem(label);\r\n\r\n        //Then\r\n        expect(actual).toEqual(expected);\r\n        expect(instance.maxId).toEqual(104);\r\n    });\r\n\r\n    //onAddItem\r\n    it('onAddItem check', () =>{\r\n        //Given\r\n        const text: string = 'wake up in hell';\r\n        const instance = mount<App>(<App />).instance();\r\n        const expected = {\r\n            label: text,\r\n            important: false,\r\n            done: false,\r\n            id: instance.maxId,\r\n        };\r\n        //When\r\n        instance.onAddItem(text);\r\n\r\n        expect(instance.state.toDoData[0]).toEqual(expected);\r\n    });\r\n\r\n    it('onToggleImportant check',() => {\r\n\r\n        //Given\r\n        const instance = mount<App>(<App />).instance();\r\n        const expected = {\r\n            label: 'hello',\r\n            important: false,\r\n            done: false,\r\n            id: 103,\r\n        };\r\n\r\n        //When\r\n        instance.onAddItem(expected.label);\r\n        instance.onToggleImportant(103);\r\n\r\n        //Then\r\n        expect(instance.state.toDoData[0].important).toBeTruthy();\r\n    });\r\n\r\n\r\n    it('onToggleDone check',() => {\r\n\r\n        //Given\r\n        const instance = mount<App>(<App />).instance();\r\n        const expected = {\r\n            label: 'hello',\r\n            important: false,\r\n            done: false,\r\n            id: 103,\r\n        };\r\n\r\n        //When\r\n        instance.onAddItem(expected.label);\r\n        instance.onToggleDone(103);\r\n\r\n        //Then\r\n        expect(instance.state.toDoData[0].done).toBeTruthy();\r\n    });\r\n\r\n    it('deleteItem check', () => {\r\n        //Given\r\n        const instance = mount<App>(<App />).instance();\r\n        const expected: number = 0;\r\n\r\n        //When\r\n        instance.deleteItem(100);\r\n        instance.deleteItem(101);\r\n        instance.deleteItem(102);\r\n\r\n        //Then\r\n        expect(expected).toEqual(instance.state.toDoData.length);\r\n    });\r\n\r\n\r\n    it('onSearchChange check', () => {\r\n        //Given\r\n        const instance = mount<App>(<App />).instance();\r\n        const expected = 'while';\r\n\r\n        //When\r\n        instance.onSearchChange(expected);\r\n\r\n        //Then\r\n        expect(expected).toEqual(instance.state.term);\r\n    });\r\n\r\n    it('onFilter change', () => {\r\n        //Given\r\n        const instance = mount<App>(<App />).instance();\r\n        const expected = 'while';\r\n\r\n        //When\r\n        instance.onFilterChange(expected);\r\n\r\n        //Then\r\n        expect(expected).toEqual(instance.state.filter);\r\n    });\r\n\r\n    it('filter check', () => {\r\n        //Given\r\n        const instance = mount<App>(<App />).instance();\r\n        \r\n        console.log(instance);\r\n        //When\r\n\r\n        //Then\r\n    })\r\n\r\n    //filter\r\n    //search\r\n    //toggleProperty\r\n});"],"version":3}