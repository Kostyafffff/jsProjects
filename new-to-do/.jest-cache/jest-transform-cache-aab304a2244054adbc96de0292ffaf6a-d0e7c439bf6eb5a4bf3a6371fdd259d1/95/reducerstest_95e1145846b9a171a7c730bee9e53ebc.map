{"file":"C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\reducers\\reducers.test.ts","mappings":";;;;;;;;;;;;;AAAA,iDAAiD;AACjD,6BAA6B;AAC7B,wDAAuD;AAEvD,QAAQ,CAAC,gBAAgB,EAAE;IACvB,IAAM,SAAS,GAAG;QACd,WAAW,EAAE,UAAU;QACvB,QAAQ,EAAE,UAAU;QACpB,QAAQ,EAAE,CAAC;gBACP,KAAK,EAAE,KAAK;gBACZ,SAAS,EAAE,KAAK;gBAChB,IAAI,EAAE,KAAK;gBACX,EAAE,EAAE,sCAAsC;aAC7C,CAAC;QACF,QAAQ,EAAE,cAAM,CAAC,MAAM;KAC1B,CAAC;IAEF,EAAE,CAAC,uBAAuB,EAAE;QACxB,OAAO;QACP,IAAM,MAAM,GAAG;YACP,IAAI,EAAE,kBAAkB;YACxB,OAAO,EAAE,OAAO;SACnB,CAAC;QAEN,IAAM,MAAM,GAAG,iBAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAE1C,MAAM;QACN,IAAM,QAAQ,yBACP,SAAS,KACZ,WAAW,EAAE,OAAO,GACvB,CAAC;QAEF,MAAM;QACN,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gBAAgB,EAAE;QACjB,OAAO;QACP,IAAM,MAAM,GAAG;YACX,IAAI,EAAE,kBAAkB;YACxB,OAAO,EAAE,cAAM,CAAC,IAAI;SACvB,CAAC;QACF,IAAM,MAAM,GAAG,iBAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAE1C,MAAM;QACN,IAAM,QAAQ,yBACP,SAAS,KACZ,QAAQ,EAAE,cAAM,CAAC,IAAI,GACxB,CAAC;QAEF,MAAM;QACN,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\reducers\\reducers.test.ts"],"sourcesContent":["import { FILTER } from 'redux-utils/store/types';\r\n// import sinon from 'sinon';\r\nimport { reducer } from 'redux-utils/reducers/reducer';\r\n\r\ndescribe('redux/reducers', () => {\r\n    const storeMock = {\r\n        searchField: 'for test',\r\n        addField: 'for test',\r\n        todoList: [{\r\n            label: 'asd',\r\n            important: false,\r\n            done: false,\r\n            id: '1dd30f7b-f8fa-4aa6-a847-86e2582436fa'\r\n        }],\r\n        filterBy: FILTER.ACTIVE,\r\n    };\r\n\r\n    it('onSetSearchValue test', () => {\r\n        //Given\r\n        const action = {\r\n                type: 'SET_SEARCH_VALUE',\r\n                payload: 'value'\r\n            };\r\n\r\n        const actual = reducer(storeMock, action);\r\n\r\n        //When\r\n        const expected = {\r\n            ...storeMock,\r\n            searchField: 'value'\r\n        };\r\n\r\n        //Then\r\n        expect(actual).toEqual(expected);\r\n    });\r\n\r\n    it('setFilter test', () => {\r\n        //Given\r\n        const action = {\r\n            type: 'SET_FILTER_VALUE',\r\n            payload: FILTER.DONE\r\n        };\r\n        const actual = reducer(storeMock, action);\r\n\r\n        //When\r\n        const expected = {\r\n            ...storeMock,\r\n            filterBy: FILTER.DONE\r\n        };\r\n\r\n        //Then\r\n        expect(actual).toEqual(expected);\r\n    })\r\n});"],"version":3}