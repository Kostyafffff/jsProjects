{"file":"C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\todo-list\\component.tsx","mappings":";;;;;;;;;;;;;;;;;;;;AAAA,iCAA6B;AAC7B,gDAA0B;AAC1B,gDAA0B;AAE1B,yEAAuE;AACvE,wDAAsD;AAEtD,QAAQ,CAAC,wCAAwC,EAAE;IAC/C,IAAM,aAAa,GAAG,eAAK,CAAC,IAAI,EAAE,CAAC;IACnC,IAAM,qBAAqB,GAAG,eAAK,CAAC,IAAI,EAAE,CAAC;IAC3C,IAAM,gBAAgB,GAAG,eAAK,CAAC,IAAI,EAAE,CAAC;IACtC,OAAO;IACP,IAAM,aAAa,GAAkB;QACjC,QAAQ,EAAE;YACF;gBACI,GAAG,EAAE,OAAO;gBACZ,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,IAAI;gBACf,EAAE,EAAE,sCAAsC;aAC7C;YACD;gBACI,GAAG,EAAE,KAAK;gBACV,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,IAAI;gBACf,EAAE,EAAE,sCAAsC;aAC7C;SACJ;QACL,WAAW,EAAE,aAAa;QAC1B,WAAW,EAAE,cAAM,CAAC,GAAG;QACvB,SAAS,EAAE,aAAa;QACxB,iBAAiB,EAAE,qBAAqB;QACxC,YAAY,EAAE,gBAAgB;KACjC,CAAC;IAEF,UAAU,CAAC;QACP,eAAK,CAAC,YAAY,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE;QACpB,MAAM;QACN,MAAM,CAAC,oBAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE;QAE3C,MAAM;QACN,IAAM,OAAO,GAAG,cAAK,CAAC,8BAAC,oBAAQ,eAAK,aAAa,EAAI,CAAC,CAAC;QAEvD,MAAM;QACN,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,IAAI,mLAAA,iEAED,EAAuB,KAAM,EAAC,YAC9B,EAAkB,UAAW,EAAC,YAC/B,KAFC,uBAAuB,EAAM,CAAC,EAC9B,kBAAkB,EAAW,CAAC,EAC9B,8BAA8B,EAAE,UAAE,EAAiB;YAAf,gCAAa;QAEnD,OAAO;QACP,IAAM,YAAY,gBACX,aAAa,CACnB,CAAC;QAEF,MAAM;QACN,IAAM,OAAO,GAAG,cAAK,CAAC,8BAAC,oBAAQ,eAAK,YAAY,EAAI,CAAC,CAAC;QAEtD,MAAM;QACN,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\todo-list\\component.tsx"],"sourcesContent":["import {mount} from 'enzyme';\r\nimport React from 'react';\r\nimport sinon from 'sinon';\r\nimport {TodoListProps} from '../../../src/components/todo-list/types-todo-list';\r\nimport { TodoList } from '../../../src/components/todo-list/component';\r\nimport {FILTER} from \"../../../src/redux/store/types\";\r\n\r\ndescribe('src/components/todo-list/todo-list.tsx', () => {\r\n    const onDeletedStub = sinon.stub();\r\n    const onToggleImportantStub = sinon.stub();\r\n    const onToggleDoneStub = sinon.stub();\r\n    //Given\r\n    const toDoListProps: TodoListProps = {\r\n        todoList: [\r\n                {\r\n                    key: 'asssa',\r\n                    label: 'all',\r\n                    done: false,\r\n                    important: true,\r\n                    id: 'a8cde768-7227-477e-a26c-772f41b19a6f',\r\n                },\r\n                {\r\n                    key: 'sss',\r\n                    label: 'all',\r\n                    done: false,\r\n                    important: true,\r\n                    id: 'a8cde768-7227-477e-a26c-772f41b19a6d',\r\n                }\r\n            ],\r\n        searchValue: 'hello world',\r\n        filterValue: FILTER.ALL,\r\n        onDeleted: onDeletedStub,\r\n        onToggleImportant: onToggleImportantStub,\r\n        onToggleDone: onToggleDoneStub,\r\n    };\r\n\r\n    beforeEach(() => {\r\n        sinon.resetHistory();\r\n    });\r\n\r\n    it('should be defined', () => {\r\n        //Then\r\n        expect(TodoList).toBeDefined();\r\n    });\r\n\r\n    it('should TodoListItemProps mount component', () => {\r\n\r\n        //When\r\n        const wrapper = mount(<TodoList {...toDoListProps} />);\r\n\r\n        //Then\r\n        expect(wrapper.isEmptyRender()).toBeFalsy();\r\n    });\r\n\r\n    it.each`\r\n        expectedClass              | expectedLength\r\n        ${'.list-group.todo-list'} | ${2}\r\n        ${'.list-group-item'}      | ${1}\r\n        `('should render $expectedClass', ( { expectedClass } ) => {\r\n\r\n        //Given\r\n        const currentProps: TodoListProps = {\r\n            ...toDoListProps\r\n        };\r\n\r\n        //When\r\n        const wrapper = mount(<TodoList {...currentProps} />);\r\n\r\n        //Then\r\n        expect(wrapper.find(expectedClass)).toHaveLength(1);\r\n    });\r\n});"],"version":3}