{"file":"C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\app-test\\index.test.tsx","mappings":";;;;;;;;;;;;;;;;;;;;AAGA,EAAE;AACF,aAAa;AACb,0CAA0C;AAC1C,uFAAuF;AACvF,KAAK;AACL,IAAI,CAAC,IAAI,CAAC,8CAA8C,EAAE,cAAM,OAAA,CAAC;IAC7D,SAAS,EAAE,UAAC,KAAa,IAAkB,OAAA,CAAC,iDAAa,YAAY,IAAK,KAAK,EAAI,CAAC,EAAzC,CAAyC;CACvF,CAAC,EAF8D,CAE9D,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,gDAAgD,EAAE,cAAM,OAAA,CAAC;IAC/D,WAAW,EAAE,UAAC,KAAa,IAAkB,OAAA,CAAC,iDAAa,cAAc,IAAK,KAAK,EAAI,CAAC,EAA3C,CAA2C;CAC3F,CAAC,EAFgE,CAEhE,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,sDAAsD,EAAE,cAAM,OAAA,CAAC;IACrE,gBAAgB,EAAE,UAAC,KAAa,IAAkB,OAAA,CAAC,iDAAa,oBAAoB,IAAK,KAAK,EAAI,CAAC,EAAjD,CAAiD;CACtG,CAAC,EAFsE,CAEtE,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,iDAAiD,EAAE,cAAM,OAAA,CAAC;IAChE,WAAW,EAAE,UAAC,KAAa,IAAkB,OAAA,CAAC,iDAAa,eAAe,IAAK,KAAK,EAAI,CAAC,EAA5C,CAA4C;CAC5F,CAAC,EAFiE,CAEjE,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,6CAA6C,EAAE,cAAM,OAAA,CAAC;IAC5D,QAAQ,EAAE,UAAC,KAAa,IAAkB,OAAA,CAAC,iDAAa,WAAW,IAAK,KAAK,EAAI,CAAC,EAAxC,CAAwC;CACrF,CAAC,EAF6D,CAE7D,CAAC,CAAC;AA1BJ,iCAA+B;AAC/B,2CAA+B;AAC/B,mDAAgD;AA0BhD,QAAQ,CAAC,oBAAoB,EAAE;IAC3B,EAAE,CAAC,kCAAkC,EAAE;QACnC,IAAM,OAAO,GAAG,cAAK,CAAC,oBAAC,SAAG,OAAG,CAAC,CAAC;QAE/B,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAChD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\app-test\\index.test.tsx"],"sourcesContent":["import { mount } from 'enzyme';\r\nimport * as React from 'react';\r\nimport {App} from \"../../../src/components/app\";\r\n//\r\n// jest.mock(\r\n//     'components/app-header/app-header',\r\n//     () => (props: object): JSX.Element => (<div mock-id=\"app-header\" {...props} />),\r\n// );\r\njest.mock('../../../src/components/app-header/component', () => ({\r\n    AppHeader: (props: object): JSX.Element => (<div mock-id=\"app-header\" {...props} />),\r\n}));\r\n\r\njest.mock('../../../src/components/search-panel/component', () => ({\r\n    SearchPanel: (props: object): JSX.Element => (<div mock-id=\"search-panel\" {...props} />),\r\n}));\r\n\r\njest.mock('../../../src/components/item-status-filter/component', () => ({\r\n    ItemStatusFilter: (props: object): JSX.Element => (<div mock-id=\"item-status-filter\" {...props} />),\r\n}));\r\n\r\njest.mock('../../../src/components/item-add-form/component', () => ({\r\n    ItemAddForm: (props: object): JSX.Element => (<div mock-id=\"item-add-form\" {...props} />),\r\n}));\r\n\r\njest.mock('../../../src/components/todo-list/component', () => ({\r\n    ToDoList: (props: object): JSX.Element => (<div mock-id=\"todo-list\" {...props} />),\r\n}));\r\n\r\ndescribe('src/components/App', () => {\r\n    it('App component should be rendered', () => {\r\n        const wrapper = mount(<App />);\r\n\r\n        expect(wrapper.isEmptyRender()).toBeFalsy();\r\n    });\r\n});"],"version":3}