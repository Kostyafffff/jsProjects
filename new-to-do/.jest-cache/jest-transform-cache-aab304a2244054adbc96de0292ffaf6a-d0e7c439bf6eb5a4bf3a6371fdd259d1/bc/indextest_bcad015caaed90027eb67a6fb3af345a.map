{"file":"C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\app-test\\index.test.tsx","mappings":";;;;;;;;;AAAA,2CAA+B;AAC/B,iCAAiC;AACjC,sCAAqC;AACrC,EAAE;AACF,aAAa;AACb,0CAA0C;AAC1C,uFAAuF;AACvF,KAAK;AACL,8CAA8C;AAC9C,4FAA4F;AAC5F,OAAO;AACP,EAAE;AACF,6DAA6D;AAC7D,gGAAgG;AAChG,OAAO;AACP,EAAE;AACF,mEAAmE;AACnE,2GAA2G;AAC3G,OAAO;AACP,EAAE;AACF,8DAA8D;AAC9D,iGAAiG;AACjG,OAAO;AACP,EAAE;AACF,0DAA0D;AAC1D,0FAA0F;AAC1F,OAAO;AAEP,QAAQ,CAAC,oBAAoB,EAAE;IAC3B,EAAE,CAAC,kCAAkC,EAAE;QACnC,IAAM,OAAO,GAAG,gBAAO,CAAC,oBAAC,SAAG,OAAG,CAAC,CAAC;QAEjC,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAChD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\app-test\\index.test.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { shallow } from 'enzyme';\r\nimport { App } from 'components/app';\r\n//\r\n// jest.mock(\r\n//     'components/app-header/app-header',\r\n//     () => (props: object): JSX.Element => (<div mock-id=\"app-header\" {...props} />),\r\n// );\r\n// jest.mock('components/app-header', () => ({\r\n//     AppHeader: (props: object): JSX.Element => (<div mock-id=\"app-header\" {...props} />),\r\n// }));\r\n//\r\n// jest.mock('../../../src/components/search-panel', () => ({\r\n//     SearchPanel: (props: object): JSX.Element => (<div mock-id=\"search-panel\" {...props} />),\r\n// }));\r\n//\r\n// jest.mock('../../../src/components/item-status-filter', () => ({\r\n//     ItemStatusFilter: (props: object): JSX.Element => (<div mock-id=\"item-status-filter\" {...props} />),\r\n// }));\r\n//\r\n// jest.mock('../../../src/components/item-add-form', () => ({\r\n//     ItemAddForm: (props: object): JSX.Element => (<div mock-id=\"item-add-form\" {...props} />),\r\n// }));\r\n//\r\n// jest.mock('../../../src/components/todo-list', () => ({\r\n//     ToDoList: (props: object): JSX.Element => (<div mock-id=\"todo-list\" {...props} />),\r\n// }));\r\n\r\ndescribe('src/components/App', () => {\r\n    it('App component should be rendered', () => {\r\n        const wrapper = shallow(<App />);\r\n\r\n        expect(wrapper.isEmptyRender()).toBeFalsy();\r\n    });\r\n});"],"version":3}