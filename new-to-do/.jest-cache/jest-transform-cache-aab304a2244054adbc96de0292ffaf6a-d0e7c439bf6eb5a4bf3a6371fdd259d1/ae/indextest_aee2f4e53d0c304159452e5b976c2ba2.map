{"file":"C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\app-header\\index.test.ts","mappings":";;;;;;;;;;;;AAAA,gDAA0B;AAC1B,wEAAwE;AACxE,0DAA0D;AAEzD,gFAAqE;AAEtE,uFAAuF;AAGvF,wDAAwD;AACxD,IAAM,oBAAoB,GAAG,eAAK,CAAC,OAAO,CAAC,SAAS,EAAE,cAAc,EAAE;IACjE,OAAO,GAAG,CAAC;AACf,CAAC,CAAC,CAAC;AAIJ,QAAQ,CAAC,0BAA0B,EAAE;IACjC,IAAM,sBAAsB,GAAG,eAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACvD,UAAU,CAAC;QACP,eAAK,CAAC,YAAY,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iBAAiB,EAAE;QAClB,OAAO;QACP,kBAAkB;QAClB,kBAAkB;QAClB,YAAY;QACZ,iDAAiD;QACjD,iCAAiC;QACjC,gCAAgC;QAChC,2BAA2B;QAC3B,8BAA8B;QAC9B,aAAa;QACb,YAAY;QACZ,kDAAkD;QAClD,iCAAiC;QACjC,gCAAgC;QAChC,0BAA0B;QAC1B,8BAA8B;QAC9B,YAAY;QACZ,SAAS;QACT,uBAAuB;QACvB,oBAAoB;QACpB,uBAAuB;QACvB,eAAe;QACf,IAAM,QAAQ,GAAG;YACb,IAAI,EAAE,oBAAoB;YAC1B,IAAI,EAAE,sBAAsB;SAC/B,CAAC;QACF,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,MAAM;QACT,2CAA2C;QAExC,MAAM;QACN,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\app-header\\index.test.ts"],"sourcesContent":["import sinon from 'sinon';\r\n// import { mapStateToProps } from '../../../src/components/app-header';\r\n// import { store } from \"../../../src/redux/store/store\";\r\n\r\n import * as  selectors from \"../../../src/redux/selectors/selectors\";\r\n\r\n//import  { getToDoCount, getDoneCount } from \"../../../src/redux/selectors/selectors\";\r\n\r\n\r\n// const getToDoItemValueStub = sinon.stub().returns(3);\r\nconst getToDoItemValueStub = sinon.replace(selectors, 'getToDoCount', function() {\r\n     return 123;\r\n });\r\n\r\n\r\n\r\ndescribe('src/components/AppHeader', () => {\r\n    const getToDoneItemValueStub = sinon.stub().returns(0);\r\n    beforeEach(() => {\r\n        sinon.resetHistory();\r\n    });\r\n\r\n    it('mapStateToProps', () => {\r\n        //Given\r\n        // const store = {\r\n        //     todoList: [\r\n        //         {\r\n        //            // [sad : false, asdasd: 'asdasd'],\r\n        //             label: 'asdasdas',\r\n        //             important: false,\r\n        //             done: false,\r\n        //             id: 'asdasdas',\r\n        //         },\r\n        //         {\r\n        //             // [sad : false, asdasd: 'asdasd'],\r\n        //             label: 'asdasdas',\r\n        //             important: false,\r\n        //             done: true,\r\n        //             id: 'asdasdas',\r\n        //         }\r\n        //     ],\r\n        //     searchField: '',\r\n        //     addField: '',\r\n        //     filterBy: 'ALL',\r\n        // } as IStore;\r\n        const expected = {\r\n            toDo: getToDoItemValueStub,\r\n            done: getToDoneItemValueStub\r\n        };\r\n        const actual = '';\r\n        //When\r\n     //   const actual = mapStateToProps(store);\r\n\r\n        //Then\r\n        expect(actual).toEqual(expected);\r\n    })\r\n});"],"version":3}