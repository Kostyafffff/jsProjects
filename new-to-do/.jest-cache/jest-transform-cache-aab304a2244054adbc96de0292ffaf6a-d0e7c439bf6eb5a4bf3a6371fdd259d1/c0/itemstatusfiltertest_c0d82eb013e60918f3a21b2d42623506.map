{"file":"C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\item-status-filter\\item-status-filter.test.tsx","mappings":"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","names":[],"sources":["C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\item-status-filter\\item-status-filter.test.tsx"],"sourcesContent":["import sinon from 'sinon';\r\nimport { ItemStatusFilter } from 'components/item-status-filter/item-status-filter';\r\nimport  { mount } from 'enzyme';\r\nimport * as React from 'react';\r\n\r\ndescribe('src/componentns/item-status-filter/item-status-filter', () => {\r\n    const props = {\r\n        filter: '',\r\n        onFilterChange: sinon.stub()\r\n    };\r\n\r\n    beforeEach(() => {\r\n       sinon.resetHistory();\r\n    });\r\n\r\n    it('Item status filter should be defined', () => {\r\n        expect(ItemStatusFilter).toBeDefined();\r\n    });\r\n\r\n    it('should ItemStatusFilter mount component', () => {\r\n        //When\r\n        const wrapper = mount(<ItemStatusFilter {...props} />);\r\n\r\n        //Then\r\n        expect(wrapper.isEmptyRender()).toBeFalsy();\r\n    });\r\n\r\n    it.each`\r\n        expectedClass                                       | expectedLength\r\n        ${'.btn-group'}                                     | ${1}\r\n        ${'.btn-group-wrapper'}                             | ${1}\r\n        ${'.btn-group-wrapper .btn-outline-secondary'}      | ${2}\r\n        ${'.btn-group-wrapper .btn-info'}                   | ${1}\r\n        `('should render in AppHeader $expectedClass', ({expectedClass, expectedLength}) => {\r\n        const currentProps = {\r\n             ...props ,\r\n            filter: 'active',\r\n        };\r\n\r\n        //When\r\n        const wrapper = mount(<ItemStatusFilter {...currentProps} />);\r\n\r\n        //Then\r\n        expect(wrapper.find(expectedClass)).toHaveLength(expectedLength);\r\n    });\r\n\r\n    it.each`\r\n        index   |   propName        |   expected\r\n        ${0}    |   ${'className'}  |   ${'btn btn-outline-secondary'}\r\n        ${0}    |   ${'accessKey'}  |   ${'all'}\r\n        ${1}    |   ${'className'}  |   ${'btn btn-outline-secondary'}\r\n        ${1}    |   ${'accessKey'}  |   ${'active'}\r\n        ${2}    |   ${'className'}  |   ${'btn btn-outline-secondary'}\r\n        ${2}    |   ${'accessKey'}  |   ${'done'}\r\n    `('should render button at $index with prop $propName', ({\r\n        index,\r\n        propName,\r\n        expected,\r\n    }) => {\r\n        //When\r\n        const wrapper = mount(<ItemStatusFilter {...props} />);\r\n        const buttons = wrapper.find('[type=\"button\"]');\r\n\r\n        //Then\r\n        expect(buttons.at(index).prop(propName)).toEqual(expected);\r\n    });\r\n\r\n    it.each`\r\n        index   |   text\r\n        ${0}    |   ${'All'}\r\n        ${1}    |   ${'Active'}\r\n        ${2}    |   ${'Done'}\r\n    `('should render button at $index with text $text', ({ index, text }) => {\r\n        //Given\r\n        const wrapper = mount<ItemStatusFilter>(<ItemStatusFilter {...props} />);\r\n        const { onButtonClick } = wrapper.instance();\r\n\r\n        //When\r\n        const buttons = wrapper.find('[type=\"button\"]');\r\n\r\n        //Then\r\n        expect(buttons.at(index).text()).toEqual(text);\r\n        expect(buttons.at(index).prop('onClick')).toEqual(onButtonClick);\r\n    });\r\n});"],"version":3}