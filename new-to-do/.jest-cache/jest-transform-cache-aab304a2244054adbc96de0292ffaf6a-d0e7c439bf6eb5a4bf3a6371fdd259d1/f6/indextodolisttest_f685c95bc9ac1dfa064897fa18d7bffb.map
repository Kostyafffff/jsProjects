{"file":"C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\todo-list\\index-todo-list.test.ts","mappings":";;;;;;;;;;;;AAAA,wDAAgE;AAChE,gDAA0B;AAC1B,kFAAsE;AACtE,qFAAyE;AACzE,qFAAyE;AACzE,+DAAoE;AAEpE,IAAM,eAAe,GAAG,eAAK,CAAC,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC,OAAO,CAAC;IAC/D;QACI,KAAK,EAAE,KAAK;QACZ,SAAS,EAAE,KAAK;QAChB,IAAI,EAAE,KAAK;QACX,EAAE,EAAE,sCAAsC;KAC7C;CACJ,CAAC,CAAC;AACP,IAAM,kBAAkB,GAAG,eAAK,CAAC,IAAI,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC/F,IAAM,kBAAkB,GAAG,eAAK,CAAC,IAAI,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC,OAAO,CAAC,cAAM,CAAC,IAAI,CAAC,CAAC;AAE7F,QAAQ,CAAC,yBAAyB,EAAE;IAChC,UAAU,CAAC;QACP,eAAK,CAAC,YAAY,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE;QACvB,OAAO;QACP,IAAM,KAAK,GAAG,EAAY,CAAC;QAC3B,IAAM,QAAQ,GAAG;YACb,QAAQ,EAAE,CAAC;oBACP,KAAK,EAAE,KAAK;oBACZ,SAAS,EAAE,KAAK;oBAChB,IAAI,EAAE,KAAK;oBACX,EAAE,EAAE,sCAAsC;iBAC7C,CAAC;YACF,WAAW,EAAE,aAAa;YAC1B,WAAW,EAAE,cAAM,CAAC,IAAI;SAC3B,CAAC;QAEF,MAAM;QACN,IAAM,MAAM,GAAG,2BAAe,CAAC,KAAK,CAAC,CAAC;QAEtC,MAAM;QACN,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,eAAe,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;QAClE,MAAM,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;QACrE,MAAM,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;IACzE,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\todo-list\\index-todo-list.test.ts"],"sourcesContent":["import { FILTER, IStore } from '../../../src/redux/store/types';\r\nimport sinon from 'sinon';\r\nimport * as getToDoList from '../../../src/redux/selectors/selectors';\r\nimport * as getSearchValue from '../../../src/redux/selectors/selectors';\r\nimport * as getFilterValue from '../../../src/redux/selectors/selectors';\r\nimport { mapStateToProps } from '../../../src/components/todo-list';\r\n\r\nconst getToDoListStub = sinon.stub(getToDoList, 'getToDoList').returns([\r\n        {\r\n            label: 'asd',\r\n            important: false,\r\n            done: false,\r\n            id: '1dd30f7b-f8fa-4aa6-a847-86e2582436fa'\r\n        }\r\n    ]);\r\nconst getSearchValueStub = sinon.stub(getSearchValue, 'getSearchValue').returns('hello world');\r\nconst getFilterValueStub = sinon.stub(getFilterValue, 'getFilterValue').returns(FILTER.DONE);\r\n\r\ndescribe('components/search-panel', () => {\r\n    beforeEach(() => {\r\n        sinon.resetHistory();\r\n    });\r\n\r\n    it('mapStateToProps test', () => {\r\n        //Given\r\n        const store = {} as IStore;\r\n        const expected = {\r\n            todoList: [{\r\n                label: 'asd',\r\n                important: false,\r\n                done: false,\r\n                id: '1dd30f7b-f8fa-4aa6-a847-86e2582436fa'\r\n            }],\r\n            searchValue: 'hello world',\r\n            filterValue: FILTER.DONE,\r\n        };\r\n\r\n        //When\r\n        const actual = mapStateToProps(store);\r\n\r\n        //Then\r\n        expect(actual).toEqual(expected);\r\n        expect(getToDoListStub.calledOnceWithExactly(store)).toBeTruthy();\r\n        expect(getSearchValueStub.calledOnceWithExactly(store)).toBeTruthy();\r\n        expect(getFilterValueStub.calledOnceWithExactly(store)).toBeTruthy();\r\n    })\r\n});"],"version":3}