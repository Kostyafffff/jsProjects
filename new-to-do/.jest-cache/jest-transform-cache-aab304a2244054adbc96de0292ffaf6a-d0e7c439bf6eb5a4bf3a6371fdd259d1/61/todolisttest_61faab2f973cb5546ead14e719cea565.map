{"file":"C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\todo-list\\todo-list.test.tsx","mappings":";;;;;;;;;;;;;;;;;;;;AAAA,iCAA+B;AAC/B,gDAA0B;AAC1B,gDAA0B;AAE1B,yEAAqE;AAErE,QAAQ,CAAC,kDAAkD,EAAE;IAEzD,OAAO;IACP,IAAM,aAAa,GAAkB;QACjC,KAAK,EAAE,CAAE,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,GAAG,CAAE;QAC/E,SAAS,EAAE,eAAK,CAAC,IAAI,EAAE;QACvB,iBAAiB,EAAE,eAAK,CAAC,IAAI,EAAE;QAC/B,YAAY,EAAE,eAAK,CAAC,IAAI,EAAE;KAC7B,CAAC;IAEF,UAAU,CAAC;QACP,eAAK,CAAC,YAAY,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE;QACpB,MAAM;QACN,MAAM,CAAC,oBAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE;QAE3C,MAAM;QACN,IAAM,OAAO,GAAG,cAAK,CAAC,8BAAC,oBAAQ,eAAK,aAAa,EAAI,CAAC,CAAC;QAEvD,MAAM;QACN,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAChD,CAAC,CAAC,CAAC;IAGH,EAAE,CAAC,IAAI,sJAAA,6DAED,EAAuB,MAAO,EAAC,YAChC,KADC,uBAAuB,EAAO,CAAC,EAC/B,uEAAuE,EAAE,UAAE,EAAiB;YAAf,gCAAa;QAE5F,OAAO;QACP,IAAM,YAAY,gBACX,aAAa,CACnB,CAAC;QAEF,MAAM;QACN,IAAM,OAAO,GAAG,cAAK,CAAC,8BAAC,oBAAQ,eAAK,YAAY,EAAI,CAAC,CAAC;QAEtD,MAAM;QACN,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\todo-list\\todo-list.test.tsx"],"sourcesContent":["import { mount } from 'enzyme';\r\nimport React from 'react';\r\nimport sinon from 'sinon';\r\nimport { TodoListProps } from '../../../src/components/todo-list/types-todo-list';\r\nimport {ToDoList} from \"../../../src/components/todo-list/todo-list\";\r\n\r\ndescribe('src/components/todo-list-item/todo-list-item.tsx', () => {\r\n\r\n    //Given\r\n    const toDoListProps: TodoListProps = {\r\n        todos: [ { key: 'asssa', label: 'all', done: false, important: true, id: 1, } ],\r\n        onDeleted: sinon.stub(),\r\n        onToggleImportant: sinon.stub(),\r\n        onToggleDone: sinon.stub(),\r\n    };\r\n\r\n    beforeEach(() => {\r\n        sinon.resetHistory();\r\n    });\r\n\r\n    it('should be defined', () => {\r\n        //Then\r\n        expect(ToDoList).toBeDefined();\r\n    });\r\n\r\n    it('should TodoListItemProps mount component', () => {\r\n\r\n        //When\r\n        const wrapper = mount(<ToDoList {...toDoListProps} />);\r\n\r\n        //Then\r\n        expect(wrapper.isEmptyRender()).toBeFalsy();\r\n    });\r\n\r\n\r\n    it.each`\r\n        expectedClass          | expectedLength\r\n        ${'.list-group-itemssaas'}  | ${1}\r\n        `('should render $expectedClass when done = $done important = $important', ( { expectedClass }) => {\r\n\r\n        //Given\r\n        const currentProps: TodoListProps = {\r\n            ...toDoListProps\r\n        };\r\n\r\n        //When\r\n        const wrapper = mount(<ToDoList {...currentProps} />);\r\n\r\n        //Then\r\n        expect(wrapper.find(expectedClass)).toHaveLength(1);\r\n    });\r\n\r\n});"],"version":3}