{"file":"C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\app-test\\app.test.tsx","mappings":"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","names":[],"sources":["C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\app-test\\app.test.tsx"],"sourcesContent":["import { mount } from 'enzyme';\r\nimport * as React from 'react';\r\nimport sinon from 'sinon';\r\nimport { App } from 'components/app/App';\r\n\r\n// jest.mock(\r\n//     'components/app-header/app-header',\r\n//     () => (props: object): JSX.Element => (<div mock-id=\"app-header\" {...props} />),\r\n// );\r\njest.mock('components/app-header/app-header', () => ({\r\n    AppHeader: (props: object): JSX.Element => (<div mock-id=\"app-header\" {...props} />),\r\n}));\r\n\r\njest.mock('components/search-panel/search-panel', () => ({\r\n    SearchPanel: (props: object): JSX.Element => (<div mock-id=\"search-panel\" {...props} />),\r\n}));\r\n\r\njest.mock('components/item-status-filter/item-status-filter', () => ({\r\n    ItemStatusFilter: (props: object): JSX.Element => (<div mock-id=\"item-status-filter\" {...props} />),\r\n}));\r\n\r\njest.mock('components/item-add-form/item-add-form', () => ({\r\n    ItemAddForm: (props: object): JSX.Element => (<div mock-id=\"item-add-form\" {...props} />),\r\n}));\r\n\r\nconst state = {\r\n  toDoData: [\r\n      sinon.stub(),\r\n      sinon.stub(),\r\n      sinon.stub(),\r\n      'asd',\r\n      'active'\r\n  ]\r\n};\r\n\r\ndescribe('src/components/App/App', () => {\r\n    beforeEach(() => {\r\n        sinon.resetHistory();\r\n    });\r\n\r\n    it('App component should be rendered', () => {\r\n        const wrapper = mount(<App {...state}/>);\r\n\r\n        expect(wrapper.isEmptyRender()).toBeFalsy();\r\n    });\r\n\r\n    //createToDoItem\r\n    it('createTodoItem check', () =>{\r\n        //Given\r\n        const label = 'asdasdas';\r\n        const instance = mount<App>(<App />).instance();\r\n        const expected = {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: instance.maxId,\r\n        };\r\n\r\n        //When\r\n        const actual = instance.createTodoItem(label);\r\n\r\n        //Then\r\n        expect(actual).toEqual(expected);\r\n        expect(instance.maxId).toEqual(104);\r\n    });\r\n\r\n    //onAddItem\r\n    it('onAddItem check', () =>{\r\n        //Given\r\n        const text = 'wake up in hell';\r\n        const instance = mount<App>(<App />).instance();\r\n        const expected = {\r\n            label: text,\r\n            important: false,\r\n            done: false,\r\n            id: 103,\r\n        };\r\n\r\n        //When\r\n        instance.onAddItem(text);\r\n\r\n        expect(instance.state.toDoData[0]).toEqual(expected);\r\n    });\r\n\r\n    it('onToggleImportant check',() => {\r\n        //Given\r\n        const wrapper = mount<App>(<App />);\r\n        const instance = wrapper.instance();\r\n        const toDoData = [{\r\n            label: 'hello',\r\n            important: false,\r\n            done: false,\r\n            id: 99,\r\n        }];\r\n        const expected = {\r\n            label: 'hello',\r\n            important: true,\r\n            done: false,\r\n            id: 99,\r\n        };\r\n        wrapper.setState({ toDoData });\r\n\r\n        //When\r\n        instance.onToggleImportant(99);\r\n\r\n        //Then\r\n        expect(instance.state.toDoData[0]).toEqual(expected);\r\n    });\r\n\r\n    //same as onToggleImportant\r\n    it('onToggleDone check',() => {\r\n        //Given\r\n        const instance = mount<App>(<App />).instance();\r\n        const expected = {\r\n            label: 'hello',\r\n            important: false,\r\n            done: false,\r\n            id: 103,\r\n        };\r\n\r\n        //When\r\n        instance.onAddItem(expected.label);\r\n        instance.onToggleDone(103);\r\n\r\n        //Then\r\n        expect(instance.state.toDoData[0].done).toBeTruthy();\r\n    });\r\n\r\n    it('should have default state', () => {\r\n        //Given\r\n        const expected = {\r\n            toDoData: [\r\n                {\r\n                    label: 'Setup React project ToDo List',\r\n                    important: false,\r\n                    done: false,\r\n                    id: 100\r\n                },\r\n                {\r\n                    label: 'Rewrite ToDo list with typescript',\r\n                    important: false,\r\n                    done: false,\r\n                    id: 101\r\n                },\r\n                {\r\n                    label: 'Create tests with Jest and Enzyme',\r\n                    important: false,\r\n                    done: false,\r\n                    id: 102\r\n                },\r\n            ],\r\n            term: '',\r\n            filter: 'active',\r\n        };\r\n\r\n        //When\r\n        const wrapper = mount<App>(<App />);\r\n\r\n        //Then\r\n        expect(wrapper.state()).toEqual(expected);\r\n    });\r\n\r\n    it('deleteItem check', () => {\r\n        //Given\r\n        const instance = mount<App>(<App />).instance();\r\n        const expected: number = 0;\r\n\r\n        //When\r\n        instance.deleteItem(100);\r\n        instance.deleteItem(101);\r\n        instance.deleteItem(102);\r\n\r\n        //Then\r\n        expect(instance.state.toDoData.length).toEqual(expected);\r\n    });\r\n\r\n    it('onSearchChange check', () => {\r\n        //Given\r\n        const instance = mount<App>(<App />).instance();\r\n        const expected = 'while';\r\n\r\n        //When\r\n        instance.onSearchChange(expected);\r\n\r\n        //Then\r\n        expect(instance.state.term).toEqual(expected);\r\n    });\r\n\r\n    it('onFilter change', () => {\r\n        //Given\r\n        const instance = mount<App>(<App />).instance();\r\n        const expected = 'while';\r\n\r\n        //When\r\n        instance.onFilterChange(expected);\r\n\r\n        //Then\r\n        expect(instance.state.filter).toEqual(expected);\r\n    });\r\n\r\n    it('filter active', () => {\r\n        //Given\r\n        const expected = {\r\n            label: 'Create tests with Jest and Enzyme',\r\n            important: false,\r\n            done: false,\r\n            id: 102\r\n        };\r\n        const items = [\r\n            {\r\n                label: 'Setup React project ToDo List',\r\n                important: false,\r\n                done: true,\r\n                id: 100\r\n            },\r\n            {\r\n                label: 'Rewrite ToDo list with typescript',\r\n                important: false,\r\n                done: true,\r\n                id: 101\r\n            },\r\n            expected,\r\n        ];\r\n        const instance = mount<App>(<App />).instance();\r\n\r\n        //When\r\n        const actual = instance.filter(items, 'active');\r\n\r\n        //Then\r\n        expect(actual).toEqual([expected]);\r\n    });\r\n\r\n    it('filter empty', () =>{\r\n        //Given\r\n        const instance = mount<App>(<App />).instance();\r\n\r\n        //When\r\n        const actual = instance.filter([], 'active');\r\n\r\n        //Then\r\n        expect(actual).toEqual([]);\r\n    });\r\n\r\n    it('filter done', () => {\r\n        //Given\r\n        const instance = mount<App>(<App />).instance();\r\n        const items = [\r\n            {\r\n                label: 'Setup React project ToDo List',\r\n                important: false,\r\n                done: true,\r\n                id: 100\r\n            },\r\n            {\r\n                label: 'Rewrite ToDo list with typescript',\r\n                important: false,\r\n                done: true,\r\n                id: 101\r\n            }\r\n        ];\r\n\r\n        //When\r\n        const actual = instance.filter(items, 'done');\r\n\r\n        //Then\r\n        expect([...actual]).toEqual([...items]);\r\n    });\r\n\r\n    it('search check', () =>{\r\n        //Given\r\n        const instance = mount<App>(<App />).instance();\r\n        const items = [\r\n            {\r\n                label: 'Setup React project ToDo List',\r\n                important: false,\r\n                done: true,\r\n                id: 100\r\n            },\r\n            {\r\n                label: 'Rewrite ToDo list with typescript',\r\n                important: false,\r\n                done: true,\r\n                id: 101\r\n            },\r\n            {\r\n                label: 'Create tests with Jest and Enzyme',\r\n                important: false,\r\n                done: false,\r\n                id: 102\r\n            },\r\n        ];\r\n        const expected = [\r\n            {\r\n                label: 'Setup React project ToDo List',\r\n                important: false,\r\n                done: true,\r\n                id: 100\r\n            },\r\n            {\r\n                label: 'Rewrite ToDo list with typescript',\r\n                important: false,\r\n                done: true,\r\n                id: 101\r\n            },\r\n        ];\r\n        //When\r\n        const actual = instance.search(items, 'todo');\r\n\r\n        //Then\r\n        expect(actual.length).toEqual(2);\r\n        expect([...actual]).toEqual([...expected]);\r\n    });\r\n\r\n    it('should pass props to AppHeader', () => {\r\n        //When\r\n        const wrapper = mount<App>(<App />);\r\n\r\n        //Then\r\n        const header = wrapper.find('[mock-id=\"app-header\"]');\r\n\r\n        expect(header.prop('toDo')).toEqual(3);\r\n        expect(header.prop('done')).toEqual(0);\r\n    });\r\n\r\n    it('should pass props to SearchPanel', () => {\r\n        //Given\r\n        const term = 'term';\r\n\r\n        //When\r\n        const wrapper = mount<App>(<App />);\r\n        wrapper.setState({ term });\r\n        const { onSearchChange } = wrapper.instance();\r\n\r\n        //Then\r\n        const search = wrapper.find('[mock-id=\"search-panel\"]');\r\n\r\n        expect(search.prop('term')).toEqual(term);\r\n        expect(search.prop('onSearchChange')).toEqual(onSearchChange);\r\n    });\r\n\r\n    it('should pass props to ItemStatusFilter', () => {\r\n        //Given\r\n        const filter = 'todo';\r\n\r\n        //When\r\n        const wrapper = mount<App>(<App />);\r\n        wrapper.setState({ filter });\r\n        const { onFilterChange } = wrapper.instance();\r\n\r\n        //Then\r\n        const filterChange = wrapper.find('[mock-id=\"item-status-filter\"]');\r\n        expect(filterChange.prop('filter')).toEqual(filter);\r\n        expect(filterChange.prop('onFilterChange')).toEqual(onFilterChange);\r\n    });\r\n\r\n    it('should pass props to ItemAddForm', () => {\r\n        //Given\r\n        const wrapper = mount<App>(<App />);\r\n\r\n        //When\r\n        const { onAddItem } = wrapper.instance();\r\n\r\n        //Then\r\n        const addItem = wrapper.find('[mock-id=\"item-add-form\"]');\r\n        expect(addItem.prop('onAddItem')).toEqual(onAddItem);\r\n    });\r\n\r\n    it('should pass props to ToDoList', () => {\r\n        //Given\r\n        const wrapper = mount<App>(<App />);\r\n\r\n        //When\r\n        const { onAddItem } = wrapper.instance();\r\n\r\n        //Then\r\n        const addItem = wrapper.find('[mock-id=\"item-add-form\"]');\r\n        expect(addItem.prop('onAddItem')).toEqual(onAddItem);\r\n    })\r\n});"],"version":3}