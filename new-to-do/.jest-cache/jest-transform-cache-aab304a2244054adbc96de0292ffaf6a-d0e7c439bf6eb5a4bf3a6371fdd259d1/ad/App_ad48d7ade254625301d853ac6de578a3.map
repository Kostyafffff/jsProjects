{"file":"C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\src\\components\\app\\App.tsx","mappings":"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","names":[],"sources":["C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\src\\components\\app\\App.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport { AppHeader } from '../app-header/app-header'\r\nimport { ItemAddForm } from '../item-add-form/item-add-form';\r\nimport { ItemStatusFilter } from '../item-status-filter/item-status-filter';\r\nimport { SearchPanel } from '../search-panel/search-panel';\r\nimport { ToDoList } from '../todo-list/todo-list';\r\nimport { IState, IToDoItem } from './app-types';\r\nexport class App extends Component<Readonly<{}>, IState> {\r\n\r\n    maxId: number = 100;\r\n\r\n    createTodoItem = (label: string): IToDoItem => ({\r\n        label,\r\n        important: false,\r\n        done: false,\r\n        id: this.maxId++\r\n    });\r\n\r\n    state: IState = {\r\n        toDoData: [\r\n            this.createTodoItem('Setup React project ToDo List'),\r\n            this.createTodoItem('Rewrite ToDo list with typescript'),\r\n            this.createTodoItem('Create tests with Jest and Enzyme'),\r\n        ],\r\n        term: '',\r\n        filter: 'active',\r\n    };\r\n\r\n    onAddItem = (text: string): void => {\r\n\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({ toDoData }) => {\r\n            return {\r\n                toDoData: [newItem, ...toDoData]\r\n            }\r\n        });\r\n    };\r\n\r\n    onToggleImportant = (id: number): void => {\r\n\r\n        this.setState( ({ toDoData }) => {\r\n            return {\r\n                toDoData: this.toggleProperty( toDoData, id, 'important')\r\n            }\r\n        })\r\n    };\r\n\r\n    filter(items : IToDoItem[], filter: string) : IToDoItem[] {\r\n        switch (filter) {\r\n            case 'active':\r\n                return items.filter((item: IToDoItem) => !item.done);\r\n\r\n            case 'done':\r\n                return items.filter((item: IToDoItem) => item.done);\r\n\r\n            case 'all':\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    search(items: IToDoItem[], term: string): IToDoItem[] {\r\n       return items.filter((item: IToDoItem) => {\r\n           if (term.length === 0) {\r\n               return items;\r\n           }\r\n\r\n           return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n          }\r\n       )\r\n    }\r\n\r\n    deleteItem = ( id : number ) : void => {\r\n        this.setState(( { toDoData } ) => {\r\n            return { toDoData: toDoData.filter(( element:  IToDoItem ) => element.id !== id) };\r\n        });\r\n    };\r\n\r\n    toggleProperty = (\r\n        arr: IToDoItem[],\r\n        id: number,\r\n        propName: string,\r\n    ): IToDoItem[] => arr.map(element => {\r\n        if (element.id === id) {\r\n            return {\r\n                ...element,\r\n                [propName]: !element[propName],\r\n            };\r\n        }\r\n\r\n        return { ...element };\r\n    });\r\n\r\n    onToggleDone = (id: number): void => {\r\n        this.setState(({ toDoData }) => {\r\n            return {\r\n                toDoData: this.toggleProperty(toDoData, id, 'done')\r\n            }\r\n        })\r\n    };\r\n\r\n    onSearchChange = (term: string): void => this.setState({ term });\r\n\r\n    onFilterChange = (filter: string): void => this.setState({ filter });\r\n\r\n    render(): JSX.Element {\r\n        const { toDoData, filter, term } = this.state;\r\n\r\n        const visibleItems: IToDoItem[] = this.filter( this.search(toDoData, term), filter);\r\n\r\n        const doneCount = toDoData.filter(element => element.done).length;\r\n\r\n        const toDoCount: number = toDoData.length - doneCount;\r\n\r\n        return(\r\n            <div>\r\n                <AppHeader toDo={toDoCount} done={doneCount}/>\r\n                <SearchPanel\r\n                    term={term}\r\n                    onSearchChange={this.onSearchChange}\r\n                />\r\n                <ItemStatusFilter\r\n                    filter={filter}\r\n                    onFilterChange={this.onFilterChange}\r\n                />\r\n                <ItemAddForm onAddItem={this.onAddItem}/>\r\n                <ToDoList\r\n                    todos={visibleItems}\r\n                    onDeleted={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleDone={this.onToggleDone}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}"],"version":3}