{"file":"C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\app-test\\app.test.tsx","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,iCAA+B;AAC/B,2CAA+B;AAC/B,gDAA0B;AAC1B,uDAAsD;AAGtD,IAAM,KAAK,GAAG;IACZ,QAAQ,EAAE;QACN,eAAK,CAAC,IAAI,EAAE;QACZ,eAAK,CAAC,IAAI,EAAE;QACZ,eAAK,CAAC,IAAI,EAAE;QACZ,KAAK;QACL,QAAQ;KACX;CACF,CAAC;AAEF,QAAQ,CAAC,wBAAwB,EAAE;IAE/B,UAAU,CAAC;QACP,eAAK,CAAC,YAAY,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE;QAEnC,IAAM,OAAO,GAAG,cAAK,CAAC,oBAAC,SAAG,eAAK,KAAK,EAAG,CAAC,CAAC;QAEzC,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,gBAAgB;IAChB,EAAE,CAAC,sBAAsB,EAAE;QACvB,OAAO;QACP,IAAM,KAAK,GAAG,UAAU,CAAC;QACzB,IAAM,QAAQ,GAAG,cAAK,CAAM,oBAAC,SAAG,OAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QAChD,IAAM,QAAQ,GAAG;YACb,KAAK,OAAA;YACL,SAAS,EAAE,KAAK;YAChB,IAAI,EAAE,KAAK;YACX,EAAE,EAAE,QAAQ,CAAC,KAAK;SACrB,CAAC;QAEF,MAAM;QACN,IAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAE9C,MAAM;QACN,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iBAAiB,EAAE;QAClB,OAAO;QACP,IAAM,IAAI,GAAG,MAAM,CAAC;QACpB,IAAM,QAAQ,GAAG,cAAK,CAAM,oBAAC,SAAG,OAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QAChD,IAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAE9C,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;QACxB,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;QAExB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAEzB,CAAC,CAAC,CAAA;IACF,WAAW;IACX,mBAAmB;IACnB,QAAQ;IACR,QAAQ;IACR,YAAY;IACZ,gBAAgB;IAChB,cAAc;IACd,eAAe;IACf,gBAAgB;AACpB,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\app-test\\app.test.tsx"],"sourcesContent":["import { mount } from 'enzyme';\r\nimport * as React from 'react';\r\nimport sinon from 'sinon';\r\nimport { App } from \"../../../src/components/app/App\";\r\n\r\n\r\nconst state = {\r\n  toDoData: [\r\n      sinon.stub(),\r\n      sinon.stub(),\r\n      sinon.stub(),\r\n      'asd',\r\n      'asdasd'\r\n  ]\r\n};\r\n\r\ndescribe('src/components/App/App', () => {\r\n\r\n    beforeEach(() => {\r\n        sinon.resetHistory();\r\n    });\r\n\r\n    it('App component should be rendered', () => {\r\n\r\n        const wrapper = mount(<App {...state}/>);\r\n\r\n        expect(wrapper.isEmptyRender()).toBeFalsy();\r\n    });\r\n\r\n    //createToDoItem\r\n    it('createTodoItem check', () =>{\r\n        //Given\r\n        const label = 'asdasdas';\r\n        const instance = mount<App>(<App />).instance();\r\n        const expected = {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: instance.maxId,\r\n        };\r\n\r\n        //When\r\n        const actual = instance.createTodoItem(label);\r\n\r\n        //Then\r\n        expect(actual).toEqual(expected);\r\n        expect(instance.maxId).toEqual(104);\r\n    });\r\n\r\n    it('onAddItem check', () =>{\r\n        //Given\r\n        const text = 'hell';\r\n        const instance = mount<App>(<App />).instance();\r\n        const newItem = instance.createTodoItem(text);\r\n\r\n        instance.state.toDoData;\r\n        instance.state.toDoData;\r\n        \r\n        console.log(newItem);\r\n\r\n    })\r\n    //onAddItem\r\n    //onToggleImportant\r\n    //filter\r\n    //search\r\n    //deleteItem\r\n    //toggleProperty\r\n    //onToggleDone\r\n    //onSearhChange\r\n    //onFilterChange\r\n});"],"version":3}