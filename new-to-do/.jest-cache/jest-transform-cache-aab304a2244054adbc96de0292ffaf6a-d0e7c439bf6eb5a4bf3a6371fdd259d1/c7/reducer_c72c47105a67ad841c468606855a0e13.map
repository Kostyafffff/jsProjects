{"file":"C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\src\\redux\\reducers\\reducer.ts","mappings":"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","names":[],"sources":["C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\src\\redux\\reducers\\reducer.ts"],"sourcesContent":["import { FILTER, IStore, IStoreTodoListItem } from '../store/types';\r\nimport { Reducer } from 'redux';\r\nimport { initialStore } from '../store/store';\r\nimport * as actions from '../actions/constants';\r\nimport { IAction, IActionBase } from '../action-creators/types';\r\n\r\nimport uuid from 'uuid/v4';\r\n\r\nexport const reducer: Reducer<IStore, IActionBase> = (store = initialStore, action) => {\r\n    switch (action.type) {\r\n        case actions.SET_SEARCH_VALUE:\r\n            return onSetSearchValue(store, action as IAction<string>);\r\n\r\n        case actions.SET_ADD_FIELD_VALUE:\r\n            return onSetAddFieldValue(store, action as IAction<string>);\r\n\r\n        case  actions.ADD_TODO_ITEM:\r\n            return onAddItem(store, action as IAction<string>);\r\n\r\n        case actions.TOGGLE_IMPORTANT_ITEM:\r\n            return onToggleImportant(store, action as IAction<string>);\r\n\r\n        case actions.TOGGLE_DONE_ITEM:\r\n            return onToggleDone(store, action as IAction<string>);\r\n\r\n        case actions.DELETE_TODO_ITEM:\r\n            return onDeleteToDoItem(store, action as IAction<string>);\r\n\r\n        case actions.SET_FILTER_VALUE:\r\n            return setFilter(store, action as IAction<FILTER>);\r\n\r\n        default:\r\n            return store;\r\n    }\r\n};\r\n\r\nexport const setFilter = (store: IStore, action: IAction<FILTER>): IStore => ({\r\n    ...store,\r\n    filterBy: action.payload\r\n});\r\n\r\nexport const onSetSearchValue = (store: IStore, action: IAction<string>): IStore => ({\r\n    ...store,\r\n    searchField: action.payload,\r\n});\r\n\r\nexport const onSetAddFieldValue = (store: IStore, action: IAction<string>): IStore => ({\r\n    ...store,\r\n    addField: action.payload,\r\n});\r\n\r\nexport const onAddItem = (store: IStore, action: IAction<string>): IStore => ({\r\n    ...store,\r\n    todoList : [...store.todoList, {\r\n        label: action.payload,\r\n        important: false,\r\n        done: false,\r\n        id: uuid(),\r\n    }]\r\n});\r\n\r\nexport const onDeleteToDoItem = (store: IStore, action: IAction<string>): IStore => ({\r\n    ...store,\r\n    todoList: store.todoList.filter(it => it.id !== action.payload),\r\n});\r\n\r\nconst toggleProperty = (\r\n    arr: IStoreTodoListItem[],\r\n    id: string,\r\n    propName: string,\r\n): IStoreTodoListItem[] => arr.map(element => {\r\n    if (element.id === id) {\r\n        return {\r\n            ...element,\r\n            [propName]: !element[propName],\r\n        };\r\n    }\r\n\r\n    return { ...element };\r\n});\r\n\r\nexport const onToggleImportant = (store: IStore, action: IAction<string>): IStore => ({\r\n    ...store,\r\n    todoList: toggleProperty(store.todoList, action.payload, 'important'),\r\n});\r\n\r\nexport const onToggleDone = (store: IStore, action: IAction<string>): IStore => ({\r\n    ...store,\r\n    todoList: toggleProperty(store.todoList, action.payload, 'done'),\r\n});\r\n"],"version":3}