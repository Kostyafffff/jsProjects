{"file":"C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\app-header\\app-header.test.tsx","mappings":"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","names":[],"sources":["C:\\Users\\user\\WebstormProjects\\jsProjects\\new-to-do\\test\\components\\app-header\\app-header.test.tsx"],"sourcesContent":["import { mount } from 'enzyme';\r\nimport sinon from 'sinon';\r\nimport { AppHeader } from 'components/app-header/app-header';\r\nimport * as React from 'react';\r\nimport { IProps } from 'components/app-header/types-app-header';\r\n\r\ndescribe('src/components/app-header/app-header', () => {\r\n\r\n    const props: IProps = {\r\n        toDo: '',\r\n        done: ''\r\n    };\r\n\r\n    beforeEach(() => {\r\n        sinon.resetHistory();\r\n    });\r\n\r\n    it('should be defined', () => {\r\n        //Then\r\n        expect(AppHeader).toBeDefined();\r\n    });\r\n\r\n    it('should TodoListItemProps mount component', () => {\r\n        //Given\r\n        const wrapper = mount(<AppHeader {...props} />);\r\n\r\n        //Then\r\n        expect(wrapper.isEmptyRender()).toBeFalsy();\r\n    });\r\n\r\n    it.each`\r\n        expectedClass           | expectedLength\r\n        ${'.app-header.d-flex'} | ${1}\r\n        ${'.app-header > h1'}   | ${1}\r\n        ${'.app-header > h2'}   | ${1}\r\n        `('should render in AppHeader $expectedClass', ({expectedClass, expectedLength}) => {\r\n\r\n        //Given\r\n        const currentProps: IProps = {\r\n            ...props\r\n        };\r\n\r\n        //When\r\n        const wrapper = mount(<AppHeader {...currentProps} />);\r\n\r\n        //Then\r\n        expect(wrapper.find(expectedClass)).toHaveLength(expectedLength);\r\n\r\n        //протестить текст в h1, h2\r\n    });\r\n\r\n    it.each`\r\n        h1                | h2\r\n        ${'My ToDo List'} | ${'more to do,'}\r\n    `('should check text in AppHeader $h1 and $h2', ({ h1, h2 }) => {\r\n        const currentProps: IProps = {\r\n             ...props\r\n        };\r\n        const wrapper = mount(<AppHeader { ...currentProps } />);\r\n\r\n        //When\r\n        expect(h1).toEqual(wrapper.find('h1').text());\r\n        expect(h2).toEqual(wrapper.find('h2').text());\r\n\r\n        const point: string = '';\r\n        point.length;\r\n    });\r\n\r\n\r\n    it.each`\r\n        toDoActual    | doneActual | toDoExpected  | doneExpected       \r\n        ${1}          | ${2}       |   ${1}        |   ${2}     \r\n        ${'1'}        | ${'2'}     |   ${'1'}      |   ${'2'}     \r\n        ${-1}         | ${-2}      |   ${-1}       |   ${-2}  \r\n        ${1123}       | ${0}       |   ${1123}     |   ${0}            \r\n        ${0}          | ${0}       |   ${0}        |   ${0} \r\n        ${0}          | ${1123}    |   ${0}        |   ${1123} \r\n    `('Should change props of AppHeader', ({ toDoActual, doneActual, toDoExpected, doneExpected }) => {\r\n\r\n         //Given\r\n        const currentProps: IProps = {\r\n           toDo: toDoActual,\r\n           done: doneActual\r\n       };\r\n\r\n        //When\r\n        const wrapper = mount(< AppHeader {...currentProps} />);\r\n\r\n        //Then\r\n        expect(wrapper.prop('toDo')).toEqual(toDoExpected);\r\n        expect(wrapper.prop('done')).toEqual(doneExpected);\r\n    })\r\n});"],"version":3}