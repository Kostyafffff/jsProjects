{"file":"E:\\JsProjects\\new-to-do\\test\\components\\todo-list-item\\component.test.tsx","mappings":"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","names":[],"sources":["E:\\JsProjects\\new-to-do\\test\\components\\todo-list-item\\component.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport sinon from 'sinon';\r\nimport {mount, shallow} from 'enzyme';\r\nimport {TodoListItemProps} from 'components/todo-list-item/types-todo-list-item';\r\nimport {TodoListItem} from 'components/todo-list-item/component';\r\n\r\ndescribe('src/components/todo-list-item/todo-list-item.tsx', () => {\r\n\r\n    const onDeletedStub = sinon.stub();\r\n    const onToggleDoneStub = sinon.stub();\r\n    const onToggleImportantStub = sinon.stub();\r\n\r\n    //Given\r\n    const props: TodoListItemProps = {\r\n        done: true,\r\n        important: false,\r\n        label: 'All',\r\n        onDeleted: onDeletedStub,\r\n        onToggleDone: onToggleDoneStub,\r\n        onToggleImportant: onToggleImportantStub,\r\n    };\r\n\r\n    beforeEach(() => {\r\n        sinon.resetHistory();\r\n    });\r\n\r\n    it('should TodoListItemProps mount component', () => {\r\n        //When\r\n        const wrapper = mount(<TodoListItem {...props} />);\r\n\r\n        //Then\r\n        expect(wrapper.isEmptyRender()).toBeFalsy();\r\n    });\r\n\r\n    it('should be defined', () => {\r\n        //Then\r\n        expect(TodoListItem).toBeDefined();\r\n    });\r\n\r\n    it.each`\r\n        done        |   important   |   expectedClass\r\n        ${false}    |   ${false}    |   ${'.todo-list-item'}\r\n        ${true}     |   ${false}    |   ${'.todo-list-item.done'}\r\n        ${false}    |   ${true}     |   ${'.todo-list-item.important'}\r\n        ${true}     |   ${true}     |   ${'.todo-list-item.done.important.todo-list-item.done.important'}\r\n        `('should render $expectedClass when done = $done important = $important', ({done, important, expectedClass}) => {\r\n        //Given\r\n        const currentProps: TodoListItemProps = {\r\n            ...props,\r\n            done,\r\n            important,\r\n        };\r\n\r\n        //When\r\n        const wrapper = mount(<TodoListItem {...currentProps} />);\r\n\r\n        //Then\r\n        expect(wrapper.find(expectedClass)).toHaveLength(1);\r\n    });\r\n\r\n    it('should have classNames with params', () => {\r\n        //When\r\n        const wrapper = shallow(<TodoListItem {...props}/>);\r\n\r\n        //Then\r\n        expect(wrapper.prop('className')).toStrictEqual('todo-list-item done');\r\n    });\r\n\r\n    it('should pass props to button', () => {\r\n        //When\r\n        const wrapper = mount(<TodoListItem {...props} />);\r\n\r\n        //Then\r\n        const button = wrapper.find('.btn.btn-outline-success.btn-sm');\r\n\r\n        expect(button.prop('type')).toEqual('button');\r\n        expect(button.prop('onClick')).toEqual(props.onToggleImportant);\r\n    });\r\n\r\n    it('should pass props item element', () => {\r\n        //When\r\n        const wrapper = mount(<TodoListItem {...props} />);\r\n\r\n        //Then\r\n        const label = wrapper.find('.todo-list-item-label');\r\n\r\n        expect(label.prop('onClick')).toEqual(props.onToggleDone);\r\n        expect(label.text()).toEqual(props.label);\r\n    });\r\n\r\n    it('should pass props to delete button', () => {\r\n        //When\r\n        const wrapper = mount(<TodoListItem {...props} />);\r\n\r\n        //Then\r\n        const label = wrapper.find('.btn.btn-outline-danger.btn-sm');\r\n\r\n        expect(label.prop('onClick')).toEqual(props.onDeleted);\r\n    });\r\n\r\n    it('should pass props to delete button', () => {\r\n        //When\r\n        const wrapper = mount(<TodoListItem {...props} />);\r\n\r\n        //Then\r\n        const label = wrapper.find('.btn.btn-outline-danger.btn-sm');\r\n\r\n        expect(label.prop('onClick')).toEqual(props.onDeleted);\r\n    });\r\n\r\n    it.each`\r\n    expectedClass                 | expectedLength     \r\n    ${'.btn.btn-outline-success'} |     ${1}                        \r\n    ${'.btn.btn-outline-danger'}  |     ${1}                               \r\n    ${'.fa.fa-exclamation'}       |     ${1}           \r\n    ${'.fa.fa-trash-o'}           |     ${1}            \r\n    ${'.todo-list-item-label'}    |     ${1}            \r\n    ${'.button-wrapper'}          |     ${1}            \r\n    ${'.button-wrapper > button'} |     ${2}            \r\n    `('elements of list should have expected class $expectedClass with $expectedLength', ( {expectedClass, expectedLength} ) => {\r\n\r\n        //Given\r\n        const currentProps: TodoListItemProps = {\r\n            ...props\r\n        };\r\n\r\n        const wrapper = mount(<TodoListItem {...currentProps} />);\r\n\r\n        //When\r\n        const element = wrapper.find(expectedClass);\r\n\r\n        //Then\r\n        expect(element).toHaveLength(expectedLength);\r\n    });\r\n});\r\n"],"version":3}