{"file":"E:\\JsProjects\\new-to-do\\src\\components\\todo-list\\component.tsx","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAA+B;AAG/B,2BAAyB;AACzB,yDAA2D;AAG3D,IAAM,MAAM,GAAG,UAAC,KAAmB,EAAE,MAAc;IAC/C,QAAQ,MAAM,EAAE;QACZ,KAAK,QAAQ;YACT,OAAO,KAAK,CAAC,MAAM,CAAC,UAAC,IAAe,IAAK,OAAA,CAAC,IAAI,CAAC,IAAI,EAAV,CAAU,CAAC,CAAC;QAEzD,KAAK,MAAM;YACP,OAAO,KAAK,CAAC,MAAM,CAAC,UAAC,IAAe,IAAK,OAAA,IAAI,CAAC,IAAI,EAAT,CAAS,CAAC,CAAC;QAExD,KAAK,KAAK,CAAC;QACX;YACI,OAAO,KAAK,CAAC;KACpB;AACL,CAAC,CAAC;AAEF,IAAM,MAAM,GAAG,UAAC,KAAkB,EAAE,IAAY;IAC5C,OAAO,KAAK,CAAC,MAAM,CAAC,UAAC,IAAe;QAC5B,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YACnB,OAAO,KAAK,CAAC;SAChB;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACrE,CAAC,CACJ,CAAA;AACL,CAAC,CAAC;AAEW,QAAA,QAAQ,GAA4B,UAAC,EAOjD;QANG,sBAAQ,EACR,wBAAS,EACT,wCAAiB,EACjB,8BAAY,EACZ,4BAAW,EACX,4BAAW;IAEX,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,CAAC,GAAG,CAAC,UAAA,IAAI;QAChE,IAAA,YAAE,EAAE,gCAAY,CAAU;QAElC,OAAO,CACH,4BAAI,GAAG,EAAE,EAAE,EAAE,SAAS,EAAC,iBAAiB;YACpC,oBAAC,wBAAY,eACL,SAAS,IACb,SAAS,EAAE,cAAY,OAAA,SAAS,CAAC,EAAE,CAAC,EAAb,CAAa,EACpC,iBAAiB,EAAE,cAAY,OAAA,iBAAiB,CAAC,EAAE,CAAC,EAArB,CAAqB,EACpD,YAAY,EAAE,cAAY,OAAA,YAAY,CAAC,EAAE,CAAC,EAAhB,CAAgB,IAC5C,CACD,CACR,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,OAAO,CACH,4BAAI,SAAS,EAAC,sBAAsB,IAC/B,QAAQ,CACR,CACR,CAAC;IACF,cAAc;AAClB,CAAC,CAAC","names":[],"sources":["E:\\JsProjects\\new-to-do\\src\\components\\todo-list\\component.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport { TodoListProps } from './types-todo-list';\r\nimport './todo-list.css';\r\nimport { TodoListItem } from '../todo-list-item/component';\r\nimport { IToDoItem } from '../app/app-types';\r\n\r\nconst filter = (items : IToDoItem[], filter: string) : IToDoItem[] => {\r\n    switch (filter) {\r\n        case 'active':\r\n            return items.filter((item: IToDoItem) => !item.done);\r\n\r\n        case 'done':\r\n            return items.filter((item: IToDoItem) => item.done);\r\n\r\n        case 'all':\r\n        default:\r\n            return items;\r\n    }\r\n};\r\n\r\nconst search = (items: IToDoItem[], term: string): IToDoItem[] => {\r\n    return items.filter((item: IToDoItem) => {\r\n            if (term.length === 0) {\r\n                return items;\r\n            }\r\n\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        }\r\n    )\r\n};\r\n\r\nexport const TodoList: React.FC<TodoListProps> = ({\r\n    todoList,\r\n    onDeleted,\r\n    onToggleImportant,\r\n    onToggleDone,\r\n    filterValue,\r\n    searchValue,\r\n}): JSX.Element => {\r\n    const elements = filter(search(todoList, searchValue), filterValue).map(item => {\r\n        const { id, ...itemProps } = item;\r\n\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem\r\n                    {...itemProps}\r\n                    onDeleted={(): void => onDeleted(id)}\r\n                    onToggleImportant={(): void => onToggleImportant(id)}\r\n                    onToggleDone={(): void => onToggleDone(id)}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n    //make connect\r\n};\r\n"],"version":3}