{"file":"E:\\JsProjects\\new-to-do\\test\\components\\search-panel\\index-search-panel.test.ts","mappings":";;;;;;;;;;;;AACA,gDAA0B;AAC1B,8EAAkE;AAClE,qEAAyF;AACzF,4FAAwF;AACxF,IAAM,kBAAkB,GAAG,eAAK,CAAC,IAAI,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAEzG,QAAQ,CAAC,6BAA6B,EAAE;IACpC,UAAU,CAAC;QACP,eAAK,CAAC,YAAY,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iBAAiB,EAAE;QAClB,OAAO;QACP,IAAM,KAAK,GAAG,EAAY,CAAC;QAC3B,IAAM,QAAQ,GAAG,EAAE,UAAU,EAAC,uBAAuB,EAAE,CAAC;QAExD,MAAM;QACN,IAAM,MAAM,GAAG,8BAAe,CAAC,KAAK,CAAC,CAAC;QAEtC,MAAM;QACN,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;IACzE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oBAAoB,EAAE;QACrB,OAAO;QACP,IAAM,0BAA0B,GAAG;YAC/B,cAAc,kCAAA;SACjB,CAAC;QAEF,MAAM;QACN,MAAM,CAAC,iCAAkB,CAAC,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","names":[],"sources":["E:\\JsProjects\\new-to-do\\test\\components\\search-panel\\index-search-panel.test.ts"],"sourcesContent":["import { IStore } from \"../../../src/redux-utils/store/types\";\r\nimport sinon from \"sinon\";\r\nimport * as getSearchValue from 'redux-utils/selectors/selectors';\r\nimport {mapDispatchToProps, mapStateToProps} from \"../../../src/components/search-panel\";\r\nimport {setSearchValue} from \"../../../src/redux-utils/action-creators/action-creators\";\r\nconst getSearchValueStub = sinon.stub(getSearchValue, 'getSearchValue').returns('honey i will find you');\r\n\r\ndescribe('src/components/search-panel', () => {\r\n    beforeEach(() => {\r\n        sinon.resetHistory();\r\n    });\r\n\r\n    it('mapStateToProps', () => {\r\n        //Given\r\n        const store = {} as IStore;\r\n        const expected = { fieldValue:'honey i will find you' };\r\n\r\n        //When\r\n        const actual = mapStateToProps(store);\r\n\r\n        //Then\r\n        expect(actual).toEqual(expected);\r\n        expect(getSearchValueStub.calledOnceWithExactly(store)).toBeTruthy();\r\n    });\r\n\r\n    it('mapDispatchToProps', () => {\r\n        //Given\r\n        const expectedMapDispatchToProps = {\r\n            setSearchValue\r\n        };\r\n\r\n        //Then\r\n        expect(mapDispatchToProps).toEqual(expectedMapDispatchToProps);\r\n    });\r\n});\r\n"],"version":3}