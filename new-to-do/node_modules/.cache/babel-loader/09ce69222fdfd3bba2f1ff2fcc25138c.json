{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\WebstormProjects\\\\jsProjects\\\\new-to-do\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\WebstormProjects\\\\jsProjects\\\\new-to-do\\\\src\\\\components\\\\app\\\\App.tsx\";\nimport * as React from 'react';\nimport { Component } from 'react';\nimport { AppHeader } from '../app-header/app-header';\nimport { ItemAddForm } from '../item-add-form/item-add-form';\nimport { ItemStatusFilter } from '../item-status-filter/item-status-filter';\nimport { SearchPanel } from '../search-panel/search-panel';\nimport { ToDoList } from '../todo-list/todo-list';\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n\n    this.createTodoItem = label => ({\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    });\n\n    this.state = {\n      toDoData: [this.createTodoItem('Setup React project ToDo List'), this.createTodoItem('Rewrite ToDo list with typescript'), this.createTodoItem('Create tests with Jest and Enzyme')],\n      term: '',\n      filter: 'active'\n    };\n\n    this.onAddItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(({\n        toDoData\n      }) => {\n        return {\n          toDoData: [newItem, ...toDoData]\n        };\n      });\n    };\n\n    this.onToggleImportant = id => this.setState(({\n      toDoData\n    }) => ({\n      toDoData: this.toggleProperty(toDoData, id, 'important')\n    }));\n\n    this.deleteItem = id => {\n      this.setState(({\n        toDoData\n      }) => {\n        return {\n          toDoData: toDoData.filter(element => element.id !== id)\n        };\n      });\n    };\n\n    this.toggleProperty = (arr, id, propName) => arr.map(element => {\n      if (element.id === id) {\n        return _objectSpread({}, element, {\n          [propName]: !element[propName]\n        });\n      }\n\n      return _objectSpread({}, element);\n    });\n\n    this.onToggleDone = id => {\n      this.setState(({\n        toDoData\n      }) => {\n        return {\n          toDoData: this.toggleProperty(toDoData, id, 'done')\n        };\n      });\n    };\n\n    this.onSearchChange = term => this.setState({\n      term\n    });\n\n    this.onFilterChange = filter => this.setState({\n      filter\n    });\n  }\n\n  filter(items, filter) {\n    switch (filter) {\n      case 'active':\n        return items.filter(item => !item.done);\n\n      case 'done':\n        return items.filter(item => item.done);\n\n      case 'all':\n      default:\n        return items;\n    }\n  }\n\n  search(items, term) {\n    return items.filter(item => {\n      if (term.length === 0) {\n        return items;\n      }\n\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          toDoData = _this$state.toDoData,\n          filter = _this$state.filter,\n          term = _this$state.term;\n    const visibleItems = this.filter(this.search(toDoData, term), filter);\n    const doneCount = toDoData.filter(element => element.done).length;\n    const toDoCount = toDoData.length - doneCount;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      toDo: toDoCount,\n      done: doneCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(SearchPanel, {\n      term: term,\n      onSearchChange: this.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(ItemStatusFilter, {\n      filter: filter,\n      onFilterChange: this.onFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(ItemAddForm, {\n      onAddItem: this.onAddItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(ToDoList, {\n      todos: visibleItems,\n      onDeleted: this.deleteItem,\n      onToggleImportant: this.onToggleImportant,\n      onToggleDone: this.onToggleDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/user/WebstormProjects/jsProjects/new-to-do/src/components/app/App.tsx"],"names":["React","Component","AppHeader","ItemAddForm","ItemStatusFilter","SearchPanel","ToDoList","App","maxId","createTodoItem","label","important","done","id","state","toDoData","term","filter","onAddItem","text","newItem","setState","onToggleImportant","toggleProperty","deleteItem","element","arr","propName","map","onToggleDone","onSearchChange","onFilterChange","items","item","search","length","toLowerCase","indexOf","render","visibleItems","doneCount","toDoCount"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport { AppHeader } from '../app-header/app-header'\r\nimport { ItemAddForm } from '../item-add-form/item-add-form';\r\nimport { ItemStatusFilter } from '../item-status-filter/item-status-filter';\r\nimport { SearchPanel } from '../search-panel/search-panel';\r\nimport { ToDoList } from '../todo-list/todo-list';\r\nimport { IState, IToDoItem } from './app-types';\r\nexport class App extends Component<{}, IState> {\r\n\r\n    maxId: number = 100;\r\n\r\n    createTodoItem = (label: string): IToDoItem => ({\r\n        label,\r\n        important: false,\r\n        done: false,\r\n        id: this.maxId++\r\n    });\r\n\r\n    state: IState = {\r\n        toDoData: [\r\n            this.createTodoItem('Setup React project ToDo List'),\r\n            this.createTodoItem('Rewrite ToDo list with typescript'),\r\n            this.createTodoItem('Create tests with Jest and Enzyme'),\r\n        ],\r\n        term: '',\r\n        filter: 'active',\r\n    };\r\n\r\n    onAddItem = (text: string): void => {\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({ toDoData }) => {\r\n            return {\r\n                toDoData: [newItem, ...toDoData]\r\n            }\r\n        });\r\n    };\r\n\r\n    onToggleImportant = (id: number): void => this.setState( ({ toDoData }) => ({\r\n        toDoData: this.toggleProperty(toDoData, id, 'important'),\r\n    }));\r\n\r\n    filter(items : IToDoItem[], filter: string) : IToDoItem[] {\r\n        switch (filter) {\r\n            case 'active':\r\n                return items.filter((item: IToDoItem) => !item.done);\r\n\r\n            case 'done':\r\n                return items.filter((item: IToDoItem) => item.done);\r\n\r\n            case 'all':\r\n\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    search(items: IToDoItem[], term: string): IToDoItem[] {\r\n       return items.filter((item: IToDoItem) => {\r\n           if (term.length === 0) {\r\n               return items;\r\n           }\r\n\r\n           return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n          }\r\n       )\r\n    }\r\n\r\n    deleteItem = ( id : number ) : void => {\r\n        this.setState(( { toDoData } ) => {\r\n            return { toDoData: toDoData.filter(( element:  IToDoItem ) => element.id !== id) };\r\n        });\r\n    };\r\n\r\n    toggleProperty = (\r\n        arr: IToDoItem[],\r\n        id: number,\r\n        propName: string,\r\n    ): IToDoItem[] => arr.map(element => {\r\n        if (element.id === id) {\r\n            return {\r\n                ...element,\r\n                [propName]: !element[propName],\r\n            };\r\n        }\r\n\r\n        return { ...element };\r\n    });\r\n\r\n    onToggleDone = (id: number): void => {\r\n        this.setState(({ toDoData }) => {\r\n            return {\r\n                toDoData: this.toggleProperty(toDoData, id, 'done')\r\n            }\r\n        })\r\n    };\r\n\r\n    onSearchChange = (term: string): void => this.setState({ term });\r\n\r\n    onFilterChange = (filter: string): void => this.setState({ filter });\r\n\r\n    render(): JSX.Element {\r\n        const { toDoData, filter, term } = this.state;\r\n\r\n        const visibleItems: IToDoItem[] = this.filter( this.search(toDoData, term), filter);\r\n\r\n        const doneCount = toDoData.filter(element => element.done).length;\r\n\r\n        const toDoCount: number = toDoData.length - doneCount;\r\n\r\n        return(\r\n            <div>\r\n                <AppHeader toDo={toDoCount} done={doneCount} />\r\n                <SearchPanel\r\n                    term={term}\r\n                    onSearchChange={this.onSearchChange}\r\n                />\r\n                <ItemStatusFilter\r\n                    filter={filter}\r\n                    onFilterChange={this.onFilterChange}\r\n                />\r\n                <ItemAddForm onAddItem={this.onAddItem} />\r\n                <ToDoList\r\n                    todos={visibleItems}\r\n                    onDeleted={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleDone={this.onToggleDone}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}